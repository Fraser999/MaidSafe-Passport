/*  Copyright 2012 MaidSafe.net limited

    This MaidSafe Software is licensed to you under (1) the MaidSafe.net Commercial License,
    version 1.0 or later, or (2) The General Public License (GPL), version 3, depending on which
    licence you accepted on initial access to the Software (the "Licences").

    By contributing code to the MaidSafe Software, or to this project generally, you agree to be
    bound by the terms of the MaidSafe Contributor Agreement, version 1.0, found in the root
    directory of this project at LICENSE, COPYING and CONTRIBUTOR respectively and also
    available at: http://www.novinet.com/license

    Unless required by applicable law or agreed to in writing, the MaidSafe Software distributed
    under the GPL Licence is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
    OF ANY KIND, either express or implied.

    See the Licences for the specific language governing permissions and limitations relating to
    use of the MaidSafe Software.                                                                 */

package maidsafe.passport.detail.protobuf;

message Fob {
  required uint32 type = 1;
  required bytes name = 2;
  required bytes encoded_private_key = 3;
  required bytes encoded_public_key = 4;
  required bytes validation_token = 5;
}

message PublicIdentity {
  required bytes public_id = 1;
  required Fob anmpid = 2;
  required Fob mpid = 3;
}

message Passport {
  repeated Fob fob = 1;
  repeated PublicIdentity public_identity = 2;
}

message PublicFob {
  required uint32 type = 1;
  required bytes encoded_public_key = 2;
  required bytes validation_token = 3;
}

message Mid {
  required uint32 type = 1;
  required bytes encrypted_tmid_name = 2;
  required bytes validation_token = 3;
}

message Tmid {
  required uint32 type = 1;
  required bytes encrypted_session = 2;
  required bytes validation_token = 3;
}

message PmidList {
  message Pmid {
    required bytes pmid = 1;
  }
  repeated Pmid pmids = 1;
}

message KeyChainList {
  message KeyChain {
    required bytes anmaid = 1;
    required bytes maid = 2;
    required bytes pmid = 3;
  }
  repeated KeyChain keychains = 1;
}
